{"mappings":"AAAA;AAEA,+EAA+E;AAE/E,IAAI,MAAM,4CAA4C,aAAa;AAEnE,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C;AACJ;AAEA,eAAe;IACX,MAAM,WAAW,MAAM,MAAM,KAAK;QAC9B,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;IAEF;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI,IAAI,gBAAgB;IACpD,oBAAoB;IAGpB,MAAM,iBAAiB,SAAS,cAAc,CAAC;IAE/C,eAAe,SAAS,GAAG;IAE3B,KAAK,OAAO,CAAC,CAAA;QACX,QAAQ,GAAG,CAAC;QACZ,MAAM,YAAY,SAAS,aAAa,CAAC;QAEzC,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,WAAW,GAAG,SAAS,QAAQ,EAAE;QACtC,UAAU,WAAW,CAAC;QAEtB,MAAM,gBAAgB,SAAS,aAAa,CAAC;QAC7C,cAAc,WAAW,GAAG,kBAAkB,QAAQ,WAAW;QACjE,UAAU,WAAW,CAAC;QAEtB,MAAM,aAAa,SAAS,aAAa,CAAC;QAC1C,WAAW,WAAW,GAAG,eAAe,QAAQ,QAAQ;QACxD,UAAU,WAAW,CAAC;QAEtB,MAAM,aAAa,SAAS,aAAa,CAAC;QAC1C,WAAW,WAAW,GAAG,eAAe,QAAQ,QAAQ;QACxD,UAAU,WAAW,CAAC;QAEtB,MAAM,cAAc,SAAS,aAAa,CAAC;QAC3C,YAAY,WAAW,GAAG,gBAAgB,QAAQ,SAAS;QAC3D,UAAU,WAAW,CAAC;QAEtB,MAAM,YAAY,SAAS,aAAa,CAAC;QACzC,UAAU,WAAW,GAAG,cAAc,QAAQ,OAAO;QACrD,UAAU,WAAW,CAAC;QAGtB,eAAe,WAAW,CAAC;IAC/B;AACA;AAGJ,qHAAqH;AAErH,oCAAoC;AACpC,eAAe,WAAW,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO;IAE3E,mEAAmE;IACnE,IAAI,UAAU;QACZ,aAAa;QACb,UAAU;QACV,UAAU;QACV,WAAW;QACX,SAAS;IACX;IAEA,MAAM,WAAW,MAAM,MAAM,KAAK;QAChC,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QAEA,MAAM,KAAK,SAAS,CAAC,SAAS,0BAA0B;IAC1D;IACA,MAAM,OAAO,MAAM,SAAS,IAAI,IAAI,gBAAgB;AAGtD;AAGA,8EAA8E;AAE9E,IAAI,KAAK,GAAG,WAAW;AAEvB,SAAS,WAAW,eAAe,iBAAiB,cAAc,eAAe,2CAA2C;AAE5H,wDAAwD;AACxD,eAAe,SAAS,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO;IAEzE,mEAAmE;IACnE,IAAI,UAAU;QACZ,aAAa;QACb,UAAU;QACV,UAAU;QACV,WAAW;QACX,SAAS;IACX;IAEA,MAAM,WAAW,MAAM,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE;QAC1C,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QAEA,MAAM,KAAK,SAAS,CAAC,SAAS,qBAAqB;IACrD;IACA,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,QAAQ,GAAG,CAAC;AACd;AAEA,iFAAiF;AAGjF,WAAW,KAAI,wBAAwB;AAErC,eAAe,WAAW,EAAE;IAE1B,MAAM,WAAW,MAAM,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE;QAC1C,QAAQ;IACV;IACA,MAAM,OAAO,MAAM,SAAS,IAAI,IAAG,kBAAkB;IACrD,QAAQ,GAAG,CAAC;AACd","sources":["src/main.js"],"sourcesContent":["\"use strict\"\r\n\r\n//------------------------------POST (FETCH)---------------------------------//\r\n\r\nlet url = \"http://localhost:3000/api/workexperience\"; //skapare url\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n    getAll();\r\n});\r\n\r\nasync function getAll() {\r\n    const response = await fetch(url, { //skickat fetch mot url\r\n        method: \"GET\", //GET förfrågan\r\n        headers: {\r\n          \"Content-Type\": \"application/json\", //JSON fromat\r\n        },\r\n    \r\n      })\r\n      \r\n      const data = await response.json(); //Väntar på json\r\n      //console.log(data);\r\n\r\n      \r\n      const allCompanysDiv = document.getElementById(\"allCompanys\");\r\n\r\n      allCompanysDiv.innerHTML = \"\";\r\n\r\n      data.forEach(company => {\r\n        console.log(company)\r\n        const companyUL = document.createElement(\"ul\");\r\n        \r\n        const idLI = document.createElement(\"li\");\r\n        idLI.textContent = \"id: \" + company.id;\r\n        companyUL.appendChild(idLI);\r\n        \r\n        const companynameLI = document.createElement(\"li\");\r\n        companynameLI.textContent = \"companyname: \" + company.companyname;\r\n        companyUL.appendChild(companynameLI);\r\n        \r\n        const jobtitleLi = document.createElement(\"li\");\r\n        jobtitleLi.textContent = \"jobtitle: \" + company.jobtitle;\r\n        companyUL.appendChild(jobtitleLi);\r\n        \r\n        const locationLI = document.createElement(\"li\");\r\n        locationLI.textContent = \"location: \" + company.location;\r\n        companyUL.appendChild(locationLI);\r\n        \r\n        const startdateLI = document.createElement(\"li\");\r\n        startdateLI.textContent = \"startdate: \" + company.startdate;\r\n        companyUL.appendChild(startdateLI);\r\n        \r\n        const enddateLI = document.createElement(\"li\");\r\n        enddateLI.textContent = \"enddate: \" + company.enddate;\r\n        companyUL.appendChild(enddateLI);\r\n        \r\n        \r\n        allCompanysDiv.appendChild(companyUL);\r\n    });\r\n    }\r\n\r\n\r\n//createData(\"MIUN\", \"Student\", \"Sundsvall\", \"2023-08-01\", \"2025-06-01\"); //Kallar funktion med parametrar som behövs\r\n \r\n//funktion för att skapa nytt (POST)\r\nasync function createData(companyname, jobtitle, location, startdate, enddate) {\r\n  \r\n  //skapar objektet company som sätts efter de inmatade paramertrarna\r\n  let company = {\r\n    companyname: companyname, \r\n    jobtitle: jobtitle,\r\n    location: location,\r\n    startdate: startdate,\r\n    enddate: enddate\r\n  }\r\n  \r\n  const response = await fetch(url, { //skickat fet mot url\r\n    method: \"POST\", //POST förfrågan\r\n    headers: {\r\n      \"Content-Type\": \"application/json\", //JSON fromat\r\n    },\r\n\r\n    body: JSON.stringify(company) //Gör om company till json\r\n  })\r\n  const data = await response.json(); //Väntar på json\r\n  \r\n\r\n}\r\n\r\n\r\n//------------------------------PUT (FETCH)---------------------------------//\r\n\r\nlet id = 4; //väljer id\r\n\r\neditData(\"Editid4\", \"EditStudent\", \"EditSundsvall\", \"2099-01-01\", \"2100-01-01\"); //Kallar funktion med parametrar som behövs\r\n\r\n//Funktion för att redigera/ändra data till ett visst id\r\nasync function editData(companyname, jobtitle, location, startdate, enddate) { \r\n  \r\n  //skapar objektet company som sätts efter de inmatade paramertrarna\r\n  let company = {\r\n    companyname: companyname, \r\n    jobtitle: jobtitle,\r\n    location: location,\r\n    startdate: startdate,\r\n    enddate: enddate\r\n  }\r\n  \r\n  const response = await fetch(`${url}${id}`, { //url med id.\r\n    method: \"PUT\", //PUT Förfrågan\r\n    headers: {\r\n      \"Content-Type\": \"application/json\", //JSON format\r\n    },\r\n\r\n    body: JSON.stringify(company) //Omvandlar till json\r\n  })\r\n  const data = await response.json(); \r\n\r\n  console.log(data)\r\n}\r\n\r\n//------------------------------DELETE (FETCH)---------------------------------//\r\n\r\n\r\ndeleteData(id);//kallar funktion med id\r\n\r\n  async function deleteData(id) { //Funtktion för att radera\r\n    \r\n    const response = await fetch(`${url}${id}`, { //fetch url med id\r\n      method: \"DELETE\", //delete förfrågan\r\n    })\r\n    const data = await response.json();//Väntar till json\r\n    console.log(data)\r\n  }\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}